{
	"info": {
		"_postman_id": "5a91140d-35a2-439a-9bce-92003b4a5990",
		"name": "postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "studios",
			"item": [
				{
					"name": "Get studios list ordered by geo proximity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port_number}}/api/studios?user_lat=43.7069564&user_lng=-79.3916043&search=&name=&amenities__type=&classes__name=&classes__coach=&page=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"studios"
							],
							"query": [
								{
									"key": "user_lat",
									"value": "43.7069564",
									"description": "latitue of user's location"
								},
								{
									"key": "user_lng",
									"value": "-79.3916043",
									"description": "longitude of user's location "
								},
								{
									"key": "search",
									"value": "",
									"description": "general search function"
								},
								{
									"key": "name",
									"value": "",
									"description": "studio name filter"
								},
								{
									"key": "amenities__type",
									"value": "",
									"description": "amenity type filter"
								},
								{
									"key": "classes__name",
									"value": "",
									"description": "class name filter"
								},
								{
									"key": "classes__coach",
									"value": "",
									"description": "class coach filter"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a studio details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port_number}}/api/studios/:studio_id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"studios",
								":studio_id"
							],
							"variable": [
								{
									"key": "studio_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "classes",
			"item": [
				{
					"name": "Get classes list under a studio ordered by time",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port_number}}/api/classes?studio_id=&search=&class_parent__name=&coach=&date=&date_range_start=&date_range_end=&time_range_start=&time_range_end=&page=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"classes"
							],
							"query": [
								{
									"key": "studio_id",
									"value": "",
									"description": "when studio id is specified, list classes under this studio, otherwise, list the request users' classes"
								},
								{
									"key": "scope",
									"value": "",
									"description": "this is used when listing user's classes, either \"myschedule\" or \"myhistory\"",
									"disabled": true
								},
								{
									"key": "search",
									"value": "",
									"description": "general search for classes"
								},
								{
									"key": "class_parent__name",
									"value": "",
									"description": "class name filter"
								},
								{
									"key": "coach",
									"value": "",
									"description": "class coach filter"
								},
								{
									"key": "date",
									"value": "",
									"description": "class date filter"
								},
								{
									"key": "date_range_start",
									"value": "",
									"description": "date range query, left end"
								},
								{
									"key": "date_range_end",
									"value": "",
									"description": "date range query, right end"
								},
								{
									"key": "time_range_start",
									"value": "",
									"description": "time range query, left end"
								},
								{
									"key": "time_range_end",
									"value": "",
									"description": "time range query, right end"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get my classes history ordered by time",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port_number}}/api/classes?scope=myhistory&search=&class_parent__name=&coach=&date=&date_range_start=&date_range_end=&time_range_start=&time_range_end=&page=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"classes"
							],
							"query": [
								{
									"key": "studio_id",
									"value": "",
									"description": "when studio id is specified, list classes under this studio, otherwise, list the request users' classes",
									"disabled": true
								},
								{
									"key": "scope",
									"value": "myhistory",
									"description": "this is used when listing user's classes, either \"myschedule\" or \"myhistory\""
								},
								{
									"key": "search",
									"value": "",
									"description": "general search for classes"
								},
								{
									"key": "class_parent__name",
									"value": "",
									"description": "class name filter"
								},
								{
									"key": "coach",
									"value": "",
									"description": "class coach filter"
								},
								{
									"key": "date",
									"value": "",
									"description": "class date filter"
								},
								{
									"key": "date_range_start",
									"value": "",
									"description": "date range query, left end"
								},
								{
									"key": "date_range_end",
									"value": "",
									"description": "date range query, right end"
								},
								{
									"key": "time_range_start",
									"value": "",
									"description": "time range query, left end"
								},
								{
									"key": "time_range_end",
									"value": "",
									"description": "time range query, right end"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get my classes schedule ordered by time",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port_number}}/api/classes?scope=myschedule&search=&class_parent__name=&coach=&date=&date_range_start=&date_range_end=&time_range_start=&time_range_end=&page=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"classes"
							],
							"query": [
								{
									"key": "studio_id",
									"value": "",
									"description": "when studio id is specified, list classes under this studio, otherwise, list the request users' classes",
									"disabled": true
								},
								{
									"key": "scope",
									"value": "myschedule",
									"description": "this is used when listing user's classes, either \"myschedule\" or \"myhistory\""
								},
								{
									"key": "search",
									"value": "",
									"description": "general search for classes"
								},
								{
									"key": "class_parent__name",
									"value": "",
									"description": "class name filter"
								},
								{
									"key": "coach",
									"value": "",
									"description": "class coach filter"
								},
								{
									"key": "date",
									"value": "",
									"description": "class date filter"
								},
								{
									"key": "date_range_start",
									"value": "",
									"description": "date range query, left end"
								},
								{
									"key": "date_range_end",
									"value": "",
									"description": "date range query, right end"
								},
								{
									"key": "time_range_start",
									"value": "",
									"description": "time range query, left end"
								},
								{
									"key": "time_range_end",
									"value": "",
									"description": "time range query, right end"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post to enroll classes",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "for_future",
									"value": "0",
									"description": "integer value, either 1 or 0, if not specified, default is 0, if it is 1, enroll for all future instances",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:{{port_number}}/api/classes/:class_id/enroll",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"classes",
								":class_id",
								"enroll"
							],
							"variable": [
								{
									"key": "class_id",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post to drop classes",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "for_future",
									"value": "0",
									"description": "integer value, either 1 or 0, if not specified, default is 0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:{{port_number}}/api/classes/:class_id/drop",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"classes",
								":class_id",
								"drop"
							],
							"variable": [
								{
									"key": "class_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "create a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"console.log(data.url);",
									"if (data.url)",
									"    pm.collectionVariables.set(\"user_url\", data.url);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "default"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:{{port_number}}/api/users",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get and cache the token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"console.log(data.access)",
									"pm.collectionVariables.set(\"token\", data.access);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "default",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "default"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:{{port_number}}/api/token",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete the user we created",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{user_url}}",
							"host": [
								"{{user_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "list users (only available in DEBUG mode)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:{{port_number}}/api/users",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment Method",
			"item": [
				{
					"name": "add payment method",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"console.log(data.url);",
									"if (data.url) ",
									"    pm.collectionVariables.set(\"card_url\", data.url);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "card_number",
									"value": "4111111111111111",
									"type": "default"
								},
								{
									"key": "card_expire",
									"value": "2029-01-01",
									"type": "default"
								},
								{
									"key": "security_code",
									"value": "123",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:{{port_number}}/api/payment-methods",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"payment-methods"
							]
						}
					},
					"response": []
				},
				{
					"name": "list payment methods (only available in DEBUG mode)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:{{port_number}}/api/payment-methods",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"payment-methods"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete payment method",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{card_url}}",
							"host": [
								"{{card_url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Subscription",
			"item": [
				{
					"name": "subscribe first plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"console.log(data.url);",
									"if (data.url) {",
									"    pm.collectionVariables.set(\"subscription_url\", data.url);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "plan",
									"value": "{{first_plan_url}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:{{port_number}}/api/subscriptions",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "list subscriptions  (only available in DEBUG mode)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:{{port_number}}/api/subscriptions",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "cancel a subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{subscription_url}}",
							"host": [
								"{{subscription_url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Plan",
			"item": [
				{
					"name": "list plans",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:{{port_number}}/api/plans",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"plans"
							]
						}
					},
					"response": []
				},
				{
					"name": "view first plan detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{first_plan_url}}",
							"host": [
								"{{first_plan_url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Receipt",
			"item": [
				{
					"name": "view lastes receipt (do this after get user receipt)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{latest_receipt_url}}",
							"host": [
								"{{latest_receipt_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user's receipts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"recpt = data.results[0].url;",
									"console.log(recpt);",
									"if (recpt)",
									"    pm.collectionVariables.set(\"latest_receipt_url\", recpt);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:{{port_number}}/api/receipts",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"receipts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Upcoming Plan",
			"item": [
				{
					"name": "Cancel upcoming plan",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{upcoming_plan}}",
							"host": [
								"{{upcoming_plan}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "view upcoming plan (do this after get user's upcoming plan)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{upcoming_plan}}",
							"host": [
								"{{upcoming_plan}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user's upcoming Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"console.log(data.upcoming_plan)",
									"pm.collectionVariables.set(\"upcoming_plan\", data.upcoming_plan);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{user_url}}",
							"host": [
								"{{user_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "make first plan as upcoming plan",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "plan",
									"value": "{{first_plan_url}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:{{port_number}}/api/upcoming-plans",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"upcoming-plans"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "list all users upcoming plans (only available in DEBUG mode)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:{{port_number}}/api/upcoming-plans",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "{{port_number}}",
							"path": [
								"api",
								"upcoming-plans"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "default"
		},
		{
			"key": "username",
			"value": "Chadddd",
			"type": "default"
		},
		{
			"key": "password",
			"value": "iambestchad",
			"type": "default"
		},
		{
			"key": "user_url",
			"value": "",
			"type": "default"
		},
		{
			"key": "card_url",
			"value": "",
			"type": "default"
		},
		{
			"key": "subscription_url\n",
			"value": "",
			"type": "default"
		},
		{
			"key": "first_plan_url",
			"value": "http://127.0.0.1:8000/api/plans/1",
			"type": "default"
		},
		{
			"key": "subscription_url",
			"value": ""
		},
		{
			"key": "latest_receipt_url",
			"value": "",
			"type": "default"
		},
		{
			"key": "upcoming_plan",
			"value": "",
			"type": "default"
		},
		{
			"key": "second_plan_url",
			"value": "http://127.0.0.1:8000/api/plans/2",
			"type": "default"
		},
		{
			"key": "third_plan_url",
			"value": "http://127.0.0.1:8000/api/plans/3",
			"type": "default"
		},
		{
			"key": "port_number",
			"value": "8000",
			"type": "default"
		}
	]
}